include "prelude.sin"

str = fun (a)
  {str}(a)
end

#BUG: Replaced `i` with `index` because scope is broken and it was shadowing
# the `i` in the while loop.
middle_chars = fun (s)
  new_s = ""
  i = 1
  top = length(s) `sub` 1
  while i `lt` top do
    new_s = new_s `concat` s[i]
    i = i `add` 1
  end
  new_s
end

palindrome = fun (s)
  if length(s) `lt` 2 then
    1
  else
    if s[0] `eq` s[-1] then
      palindrome(middle_chars(s))
    else
      0
    end
  end
end

assert(palindrome("motor"), 0)
assert(palindrome("rotor"), 1)

n = 0
i = 1000
while (i = i `sub` 1) `gt` 100 do
  j = 1000
  while (j = j `sub` 1) `gt` 100 do
    t = i `mul` j
    if palindrome(str(t)) then
      n = n `max` t
    end
  end
end
print(n)